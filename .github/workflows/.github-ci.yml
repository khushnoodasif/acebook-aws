name: ci-cd
on: [push]
jobs:
  setup-environment:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
      
      - name: Install dependencies
        run: npm install

      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  lint-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Lint run
        run: npm run lint

  jest-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Jest run
        run: npm run test:unit

  cypress-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:test
          wait-on: http://localhost:3030    

  deploy:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-2

        - name: Deploy to S3
          run:
            aws deploy push
            --application-name kush-app
            --ignore-hidden-files
            --s3-location s3://kush-bucket/acebook.zip
            --source .

        - name: AWS Create Deployment
          run:
            aws deploy create-deployment
            --application-name kush-app
            --s3-location bucket=kush-bucket,key=acebook.zip,bundleType=zip
            --deployment-group-name kush-group
            --file-exists-behavior OVERWRITE